<?php
require_once 'includes/vendor/autoload.php';
use \Firebase\JWT\JWT;

/**
* Implements of hook_init().
*/
function partikkel_init() {
	$node = menu_get_object();
	if ( empty($node) ) {
		return;
	}

	if(!empty($_GET["partikkel"])){
		watchdog('partikkel','we have a ticket');
		 checkTicketAndMarkPagePaid($_GET["partikkel"],$node->nid);
		 stripReqParamAndRedirectToSame();
	}
}

/**premium hook*/
function partikkel_premium_access(&$node, $teaser) {
  if ($teaser) {
    return NULL;
  }

  if ( empty($node->premium_access) ) {
    $node->premium_access = FALSE;
  }

  if ( !$node->premium_access ) {
    return partikkel_check_access($node) ? TRUE : NULL;
  }
  return NULL;
}

function partikkel_check_access ($node) {
	$article_access = ($node!=null && isset($_SESSION['paid-'.$node->nid]) && $_SESSION['paid-'.$node->nid]==1);
    
/*
    $timepass_access = isset($_SESSION['partikkeltp']) && ($_SESSION['partikkeltp'] - time()>0);
	
	
	if($timepass_access){
      $remainingtpseconds = $_SESSION['partikkeltp'] - time();
      watchdog('partikkel', 'Letting in partikkel user ' . $_SESSION['partikkeluser'] . ' , remaining seconds: ' . $remainingtpseconds . ' time is ' . time() . ' tpexpiry is ' . $_SESSION['partikkeltp']);
    }

	if($article_access){
      watchdog('partikkel', 'Letting in partikkel user ' . $_SESSION['partikkeluser']);
    }
*/
    return $article_access || is_timepass();
}

function is_timepass() {
  return isset($_SESSION['partikkeltp']) && ($_SESSION['partikkeltp'] - time()>0);
}

function partikkel_node_view($node, $view_mode, $langcode) {
	if($view_mode == 'full' AND partikkel_check_access($node)) {
		if(is_timepass()){
			$node->content['body'][0]['#markup'] .= '<div id="partikkel-timepass"></div>';
		} else {
			$node->content['body'][0]['#markup'] .= '<div id="partikkel-paid"></div>';
		}
	}
}

function stripReqParamAndRedirectToSame(){
	unset($_GET['partikkel']); // delete partikkel-parameter for aa bevare clean urls
	$options = array('query' => $_GET);
	drupal_goto(current_path(),$options);
}

function checkTicketAndMarkPagePaid($ticket,$nid)
{
	$jwt = base64_decode($ticket);
	$public_key_file = file_get_contents(drupal_get_path('module', 'partikkel').'/public.pem');
	$public_key = openssl_pkey_get_public($public_key_file);
	try{
		$decoded = JWT::decode($jwt, $public_key, array('RS256'));//verify ticket
		$puid=$decoded->sub;
        $_SESSION['partikkeluser'] = $puid;
		if (array_key_exists("timepass",$decoded)){
			//Timepass, but is it still valid
            $tpexpiry=$decoded->timepassexpires/1000;
            $seconds_remaining=$tpexpiry - time();
            //drupal_set_message("We have a timepass, remaining: " . $seconds_remaining);
            watchdog('partikkel', 'We have a timepass, remaining: ' . $seconds_remaining . ' for user ' . $puid. ' time is ' . time(). ' tpexpiry is ' . $tpexpiry);
			if($seconds_remaining > 0){ // still valid, mark session good
				$_SESSION['partikkeltp'] = $tpexpiry;
			} else {
				$_SESSION['partikkeltp'] = null;
				return;
			}
		} else { //This is an article
			$parsed = drupal_parse_url($decoded->url)['path'];
			//drupal_set_message($parsed.'  '.request_path());
			if (!strpos($parsed, request_path()) !== false)//verify valid for path
				return;
		}
	}
	catch (Exception $e) {
	    watchdog('partikkel', 'failed decoding ticket: ' . $e->getMessage());
	}
	if(!empty($decoded)){
		$_SESSION['paid-'.$nid] = 1;
	}
}

